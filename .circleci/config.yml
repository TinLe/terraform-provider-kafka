version: 2
jobs:
  build:
    working_directory: /go/src/github.com/Mongey/terraform-provider-kafka
    docker:
      - image: circleci/golang:1.11
        environment:
          GO111MODULE: 'on'
          TEST_RESULTS: /tmp/test-results
      - image: confluentinc/cp-zookeeper:latest
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
      - image: mongey/kafka:5.0.1
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_ZOOKEEPER_CONNECT: localhost:2181
          KAFKA_LOG_SEGMENT_BYTES: 1234
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: go get -u github.com/mitchellh/gox
      - run: gox -osarch="linux/amd64 darwin/amd64"
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - store_artifacts:
          path: /go/src/github.com/Mongey/terraform-provider-kafka/terraform-provider-kafka_linux_amd64
          destination: terraform-provider-kafka
      - store_artifacts:
          path: /go/src/github.com/Mongey/terraform-provider-kafka/terraform-provider-kafka_darwin_amd64
          destination: terraform-provider-kafka_darwin_amd64
      - run: make test
      - run: go get github.com/jstemmer/go-junit-report
      - run: mkdir -p $TEST_RESULTS
      - run:
          name: Run Tests
          command: |
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            make testacc| tee ${TEST_RESULTS}/go-test.out
      - store_test_results:
          path: /tmp/test-results

workflows:
  version: 2
  build:
    jobs:
      - build
